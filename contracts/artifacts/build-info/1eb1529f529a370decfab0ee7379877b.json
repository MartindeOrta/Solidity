{
	"id": "1eb1529f529a370decfab0ee7379877b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fundMe.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\ninterface AggregatorV3Interface {\r\n  function decimals() external view returns (uint8);\r\n\r\n  function description() external view returns (string memory);\r\n\r\n  function version() external view returns (uint256);\r\n\r\n  function getRoundData(\r\n    uint80 _roundId\r\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n}\r\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\r\n\r\ncontract FundMe{\r\n    using SafeMathChainlink for uint256;\r\n    mapping(address => uint256) public addressToAmountFunded;\r\n\r\n    function fund() public payable{\r\n        uint256 minimumUSD = 50 * 10 ** 18;\r\n        require(getConversionRate(msg.value)>= minimumUSD,\"You need to spend more eth!\");\r\n        if(msg.value < minimumUSD)\r\n        // solamente que se puedan hacer transacciones mayores a 50 dolares\r\n        addressToAmountFunded[msg.sender] += msg.value;\r\n\r\n        \r\n    }\r\n    function getVersion() public view returns(uint256){\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\r\n        return priceFeed.version(); \r\n    }\r\n\r\n    function getPrice() public view returns(uint256){\r\n          AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\r\n           (\r\n            /* uint80 roundID */,\r\n            int answer,\r\n            /*uint startedAt*/,\r\n            /*uint timeStamp*/,\r\n            /*uint80 answeredInRound*/\r\n        ) = priceFeed.latestRoundData();\r\n        return uint256(answer *10000000000);\r\n    }\r\n\r\n    function getConversionRate(uint ethAmount) public view returns (uint256){\r\n        uint256 ethPrice = getPrice();\r\n        uint256 ethAmountInUsd = (ethPrice *ethAmount)/1000000000000000000;\r\n        return ethAmountInUsd;\r\n    }\r\n//50.424307010000000000\r\n}"
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"SafeMathChainlink": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SDIV ADDRESS DUP7 0x4F MULMOD 0xE2 CREATE2 SLT 0x23 PUSH13 0xAC3F03995875C7A028E503D834 0xBC 0xE1 0x26 0xCB SWAP11 0xDB GT 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "621:2783:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SDIV ADDRESS DUP7 0x4F MULMOD 0xE2 CREATE2 SLT 0x23 PUSH13 0xAC3F03995875C7A028E503D834 0xBC 0xE1 0x26 0xCB SWAP11 0xDB GT 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "621:2783:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220280530864f09e2f512236cac3f03995875c7a028e503d834bce126cb9adb11e764736f6c634300060c0033",
									".code": [
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/fundMe.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fundMe.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"contracts/fundMe.sol\":{\"keccak256\":\"0xec87a26b0298b4c65d9bf6172b8e862c23e6389b61a25bc5fbb2b6c7b45e8a9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ebf0a8b49e76b5869200da17dcb639c5cf942a9fb0163753935185e1b085cb\",\"dweb:/ipfs/QmXtRvj6BptsmDPGGDjCZQzPw8zeHMzrsBpUPgqBc1ea1L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FundMe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressToAmountFunded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "getConversionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fundMe.sol\":684:2090  contract FundMe{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fundMe.sol\":684:2090  contract FundMe{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d8e6e2c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3e47d6f3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6e5b6b28\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb60d4288\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fundMe.sol\":1175:1381  function getVersion() public view returns(uint256){\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fundMe.sol\":748:804  mapping(address => uint256) public addressToAmountFunded */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fundMe.sol\":1833:2062  function getConversionRate(uint ethAmount) public view returns (uint256){\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fundMe.sol\":1389:1825  function getPrice() public view returns(uint256){\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fundMe.sol\":813:1169  function fund() public payable{\r... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/fundMe.sol\":1175:1381  function getVersion() public view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/fundMe.sol\":1217:1224  uint256 */\n      0x00\n        /* \"contracts/fundMe.sol\":1236:1267  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/fundMe.sol\":1292:1334  0x694AA1769357215DE4FAC081bf1f309aDC325306 */\n      0x694aa1769357215de4fac081bf1f309adc325306\n        /* \"contracts/fundMe.sol\":1236:1335  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306) */\n      swap1\n      pop\n        /* \"contracts/fundMe.sol\":1353:1362  priceFeed */\n      dup1\n        /* \"contracts/fundMe.sol\":1353:1370  priceFeed.version */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54fd4d50\n        /* \"contracts/fundMe.sol\":1353:1372  priceFeed.version() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/fundMe.sol\":1346:1372  return priceFeed.version() */\n      swap2\n      pop\n      pop\n        /* \"contracts/fundMe.sol\":1175:1381  function getVersion() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/fundMe.sol\":748:804  mapping(address => uint256) public addressToAmountFunded */\n    tag_13:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/fundMe.sol\":1833:2062  function getConversionRate(uint ethAmount) public view returns (uint256){\r... */\n    tag_17:\n        /* \"contracts/fundMe.sol\":1897:1904  uint256 */\n      0x00\n        /* \"contracts/fundMe.sol\":1916:1932  uint256 ethPrice */\n      dup1\n        /* \"contracts/fundMe.sol\":1935:1945  getPrice() */\n      tag_29\n        /* \"contracts/fundMe.sol\":1935:1943  getPrice */\n      tag_20\n        /* \"contracts/fundMe.sol\":1935:1945  getPrice() */\n      jump\t// in\n    tag_29:\n        /* \"contracts/fundMe.sol\":1916:1945  uint256 ethPrice = getPrice() */\n      swap1\n      pop\n        /* \"contracts/fundMe.sol\":1956:1978  uint256 ethAmountInUsd */\n      0x00\n        /* \"contracts/fundMe.sol\":2003:2022  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/fundMe.sol\":1992:2001  ethAmount */\n      dup5\n        /* \"contracts/fundMe.sol\":1982:1990  ethPrice */\n      dup4\n        /* \"contracts/fundMe.sol\":1982:2001  ethPrice *ethAmount */\n      mul\n        /* \"contracts/fundMe.sol\":1981:2022  (ethPrice *ethAmount)/1000000000000000000 */\n      dup2\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      div\n        /* \"contracts/fundMe.sol\":1956:2022  uint256 ethAmountInUsd = (ethPrice *ethAmount)/1000000000000000000 */\n      swap1\n      pop\n        /* \"contracts/fundMe.sol\":2040:2054  ethAmountInUsd */\n      dup1\n        /* \"contracts/fundMe.sol\":2033:2054  return ethAmountInUsd */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/fundMe.sol\":1833:2062  function getConversionRate(uint ethAmount) public view returns (uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/fundMe.sol\":1389:1825  function getPrice() public view returns(uint256){\r... */\n    tag_20:\n        /* \"contracts/fundMe.sol\":1429:1436  uint256 */\n      0x00\n        /* \"contracts/fundMe.sol\":1450:1481  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/fundMe.sol\":1506:1548  0x694AA1769357215DE4FAC081bf1f309aDC325306 */\n      0x694aa1769357215de4fac081bf1f309adc325306\n        /* \"contracts/fundMe.sol\":1450:1549  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306) */\n      swap1\n      pop\n        /* \"contracts/fundMe.sol\":1613:1623  int answer */\n      0x00\n        /* \"contracts/fundMe.sol\":1744:1753  priceFeed */\n      dup2\n        /* \"contracts/fundMe.sol\":1744:1769  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/fundMe.sol\":1744:1771  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/fundMe.sol\":1563:1771  (\r... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/fundMe.sol\":1805:1816  10000000000 */\n      0x02540be400\n        /* \"contracts/fundMe.sol\":1797:1803  answer */\n      dup2\n        /* \"contracts/fundMe.sol\":1797:1816  answer *10000000000 */\n      mul\n        /* \"contracts/fundMe.sol\":1782:1817  return uint256(answer *10000000000) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/fundMe.sol\":1389:1825  function getPrice() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/fundMe.sol\":813:1169  function fund() public payable{\r... */\n    tag_22:\n        /* \"contracts/fundMe.sol\":854:872  uint256 minimumUSD */\n      0x00\n        /* \"contracts/fundMe.sol\":875:888  50 * 10 ** 18 */\n      0x02b5e3af16b1880000\n        /* \"contracts/fundMe.sol\":854:888  uint256 minimumUSD = 50 * 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/fundMe.sol\":938:948  minimumUSD */\n      dup1\n        /* \"contracts/fundMe.sol\":907:935  getConversionRate(msg.value) */\n      tag_37\n        /* \"contracts/fundMe.sol\":925:934  msg.value */\n      callvalue\n        /* \"contracts/fundMe.sol\":907:924  getConversionRate */\n      tag_17\n        /* \"contracts/fundMe.sol\":907:935  getConversionRate(msg.value) */\n      jump\t// in\n    tag_37:\n        /* \"contracts/fundMe.sol\":907:948  getConversionRate(msg.value)>= minimumUSD */\n      lt\n      iszero\n        /* \"contracts/fundMe.sol\":899:979  require(getConversionRate(msg.value)>= minimumUSD,\"You need to spend more eth!\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f75206e65656420746f207370656e64206d6f726520657468210000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"contracts/fundMe.sol\":1005:1015  minimumUSD */\n      dup1\n        /* \"contracts/fundMe.sol\":993:1002  msg.value */\n      callvalue\n        /* \"contracts/fundMe.sol\":993:1015  msg.value < minimumUSD */\n      lt\n        /* \"contracts/fundMe.sol\":990:1149  if(msg.value < minimumUSD)\r... */\n      iszero\n      tag_39\n      jumpi\n        /* \"contracts/fundMe.sol\":1140:1149  msg.value */\n      callvalue\n        /* \"contracts/fundMe.sol\":1103:1124  addressToAmountFunded */\n      0x00\n        /* \"contracts/fundMe.sol\":1103:1136  addressToAmountFunded[msg.sender] */\n      dup1\n        /* \"contracts/fundMe.sol\":1125:1135  msg.sender */\n      caller\n        /* \"contracts/fundMe.sol\":1103:1136  addressToAmountFunded[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/fundMe.sol\":1103:1149  addressToAmountFunded[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fundMe.sol\":990:1149  if(msg.value < minimumUSD)\r... */\n    tag_39:\n        /* \"contracts/fundMe.sol\":813:1169  function fund() public payable{\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208bfa2d127e7725d352ef901e212a981d8c39c77efd0aecb2a80fa1eb15274f4f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061043f806100206000396000f3fe60806040526004361061004a5760003560e01c80630d8e6e2c1461004f5780633e47d6f31461007a5780636e5b6b28146100df57806398d5fdca1461012e578063b60d428814610159575b600080fd5b34801561005b57600080fd5b50610064610163565b6040518082815260200191505060405180910390f35b34801561008657600080fd5b506100c96004803603602081101561009d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610204565b6040518082815260200191505060405180910390f35b3480156100eb57600080fd5b506101186004803603602081101561010257600080fd5b810190808035906020019092919050505061021c565b6040518082815260200191505060405180910390f35b34801561013a57600080fd5b5061014361024b565b6040518082815260200191505060405180910390f35b610161610325565b005b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c357600080fd5b505afa1580156101d7573d6000803e3d6000fd5b505050506040513d60208110156101ed57600080fd5b810190808051906020019092919050505091505090565b60006020528060005260406000206000915090505481565b60008061022761024b565b90506000670de0b6b3a76400008483028161023e57fe5b0490508092505050919050565b60008073694aa1769357215de4fac081bf1f309adc325306905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156102ad57600080fd5b505afa1580156102c1573d6000803e3d6000fd5b505050506040513d60a08110156102d757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506402540be40081029250505090565b60006802b5e3af16b188000090508061033d3461021c565b10156103b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75206e65656420746f207370656e64206d6f72652065746821000000000081525060200191505060405180910390fd5b8034101561040657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b5056fea26469706673582212208bfa2d127e7725d352ef901e212a981d8c39c77efd0aecb2a80fa1eb15274f4f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x325 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x227 PUSH2 0x24B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x23E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 MUL SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x2B5E3AF16B1880000 SWAP1 POP DUP1 PUSH2 0x33D CALLVALUE PUSH2 0x21C JUMP JUMPDEST LT ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F75206E65656420746F207370656E64206D6F726520657468210000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x406 JUMPI CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 STATICCALL 0x2D SLT PUSH31 0x7725D352EF901E212A981D8C39C77EFD0AECB2A80FA1EB15274F4F64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "684:1406:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80630d8e6e2c1461004f5780633e47d6f31461007a5780636e5b6b28146100df57806398d5fdca1461012e578063b60d428814610159575b600080fd5b34801561005b57600080fd5b50610064610163565b6040518082815260200191505060405180910390f35b34801561008657600080fd5b506100c96004803603602081101561009d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610204565b6040518082815260200191505060405180910390f35b3480156100eb57600080fd5b506101186004803603602081101561010257600080fd5b810190808035906020019092919050505061021c565b6040518082815260200191505060405180910390f35b34801561013a57600080fd5b5061014361024b565b6040518082815260200191505060405180910390f35b610161610325565b005b60008073694aa1769357215de4fac081bf1f309adc32530690508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c357600080fd5b505afa1580156101d7573d6000803e3d6000fd5b505050506040513d60208110156101ed57600080fd5b810190808051906020019092919050505091505090565b60006020528060005260406000206000915090505481565b60008061022761024b565b90506000670de0b6b3a76400008483028161023e57fe5b0490508092505050919050565b60008073694aa1769357215de4fac081bf1f309adc325306905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156102ad57600080fd5b505afa1580156102c1573d6000803e3d6000fd5b505050506040513d60a08110156102d757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506402540be40081029250505090565b60006802b5e3af16b188000090508061033d3461021c565b10156103b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75206e65656420746f207370656e64206d6f72652065746821000000000081525060200191505060405180910390fd5b8034101561040657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b5056fea26469706673582212208bfa2d127e7725d352ef901e212a981d8c39c77efd0aecb2a80fa1eb15274f4f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x325 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x227 PUSH2 0x24B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x23E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 MUL SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x2B5E3AF16B1880000 SWAP1 POP DUP1 PUSH2 0x33D CALLVALUE PUSH2 0x21C JUMP JUMPDEST LT ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F75206E65656420746F207370656E64206D6F726520657468210000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x406 JUMPI CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 STATICCALL 0x2D SLT PUSH31 0x7725D352EF901E212A981D8C39C77EFD0AECB2A80FA1EB15274F4F64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "684:1406:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1175:206;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;748:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1833:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1389:436;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;813:356;;;:::i;:::-;;1175:206;1217:7;1236:31;1292:42;1236:99;;1353:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:26;;;1175:206;:::o;748:56::-;;;;;;;;;;;;;;;;;:::o;1833:229::-;1897:7;1916:16;1935:10;:8;:10::i;:::-;1916:29;;1956:22;2003:19;1992:9;1982:8;:19;1981:41;;;;;;1956:66;;2040:14;2033:21;;;;1833:229;;;:::o;1389:436::-;1429:7;1450:31;1506:42;1450:99;;1613:10;1744:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1563:208;;;;;;1805:11;1797:6;:19;1782:35;;;;1389:436;:::o;813:356::-;854:18;875:13;854:34;;938:10;907:28;925:9;907:17;:28::i;:::-;:41;;899:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:10;993:9;:22;990:159;;;1140:9;1103:21;:33;1125:10;1103:33;;;;;;;;;;;;;;;;:46;;;;;;;;;;;990:159;813:356;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "217400",
								"executionCost": "257",
								"totalCost": "217657"
							},
							"external": {
								"addressToAmountFunded(address)": "1169",
								"fund()": "infinite",
								"getConversionRate(uint256)": "infinite",
								"getPrice()": "infinite",
								"getVersion()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 2090,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208bfa2d127e7725d352ef901e212a981d8c39c77efd0aecb2a80fa1eb15274f4f64736f6c634300060c0033",
									".code": [
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "D8E6E2C"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "3E47D6F3"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "6E5B6B28"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "98D5FDCA"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "B60D4288"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 2090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "694AA1769357215DE4FAC081BF1F309ADC325306"
										},
										{
											"begin": 1236,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "54FD4D50"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1935,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1990,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2001,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1981,
											"end": 2022,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2022,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2022,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1981,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2022,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2054,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1548,
											"name": "PUSH",
											"source": 1,
											"value": "694AA1769357215DE4FAC081BF1F309ADC325306"
										},
										{
											"begin": 1450,
											"end": 1549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1769,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1769,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1769,
											"name": "PUSH",
											"source": 1,
											"value": "FEAF968C"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "2540BE400"
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1816,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1825,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 854,
											"end": 872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 854,
											"end": 888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 854,
											"end": 888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 938,
											"end": 948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 907,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 907,
											"end": 935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 907,
											"end": 935,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 907,
											"end": 935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 907,
											"end": 948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 907,
											"end": 948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "596F75206E65656420746F207370656E64206D6F726520657468210000000000"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 899,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 899,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1015,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1149,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 990,
											"end": 1149,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1135,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 990,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 813,
											"end": 1169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addressToAmountFunded(address)": "3e47d6f3",
							"fund()": "b60d4288",
							"getConversionRate(uint256)": "6e5b6b28",
							"getPrice()": "98d5fdca",
							"getVersion()": "0d8e6e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"contracts/fundMe.sol\":{\"keccak256\":\"0xec87a26b0298b4c65d9bf6172b8e862c23e6389b61a25bc5fbb2b6c7b45e8a9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ebf0a8b49e76b5869200da17dcb639c5cf942a9fb0163753935185e1b085cb\",\"dweb:/ipfs/QmXtRvj6BptsmDPGGDjCZQzPw8zeHMzrsBpUPgqBc1ea1L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 192,
								"contract": "contracts/fundMe.sol:FundMe",
								"label": "addressToAmountFunded",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
					"exportedSymbols": {
						"SafeMathChainlink": [
							138
						]
					},
					"id": 139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "SafeMathChainlink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "930:95:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "936:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "967:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "972:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "967:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "959:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1019:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1012:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "651:209:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "876:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:0"
									},
									"scope": 138,
									"src": "863:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1344:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "1358:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1363:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:0"
											},
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 53,
														"src": "1405:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 45,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 50,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 47,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1417:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 48,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1421:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 46,
													"src": "1436:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 52,
												"nodeType": "Return",
												"src": "1429:8:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1029:245:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1290:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1301:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1335:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:9:0"
									},
									"scope": 138,
									"src": "1277:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1737:351:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1952:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 70,
												"nodeType": "IfStatement",
												"src": "1948:35:0",
												"trueBody": {
													"id": 69,
													"nodeType": "Block",
													"src": "1960:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 63,
															"id": 68,
															"nodeType": "Return",
															"src": "1968:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 72,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 88,
														"src": "1989:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 71,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 73,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 74,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2005:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 78,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 79,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "2024:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 81,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "2029:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2020:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2012:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 72,
													"src": "2082:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 87,
												"nodeType": "Return",
												"src": "2075:8:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1446:221:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1683:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1694:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:22:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1728:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:0"
									},
									"scope": 138,
									"src": "1670:418:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2596:237:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2672:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2664:44:0"
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 114,
														"src": "2714:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 111,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2726:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "2827:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 113,
												"nodeType": "Return",
												"src": "2820:8:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2092:434:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2542:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2553:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2541:22:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2587:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2586:9:0"
									},
									"scope": 138,
									"src": "2529:304:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3330:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 126,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "3344:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3349:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3344:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3336:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "3336:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3392:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3396:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 135,
												"nodeType": "Return",
												"src": "3385:12:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2837:423:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:22:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:0"
									},
									"scope": 138,
									"src": "3263:139:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 139,
							"src": "621:2783:0"
						}
					],
					"src": "32:3373:0"
				},
				"id": 0
			},
			"contracts/fundMe.sol": {
				"ast": {
					"absolutePath": "contracts/fundMe.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							184
						],
						"FundMe": [
							293
						]
					},
					"id": 294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 140,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 145,
												"src": "141:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 142,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "141:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "140:7:1"
									},
									"scope": 184,
									"src": "98:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7284e416",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "200:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "200:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "199:15:1"
									},
									"scope": 184,
									"src": "154:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "263:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "262:9:1"
									},
									"scope": 184,
									"src": "221:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9a6fc8f5",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "306:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 156,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "306:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:27:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "350:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 159,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "350:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "366:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 161,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "366:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "381:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "400:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "419:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 167,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "419:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "349:93:1"
									},
									"scope": 184,
									"src": "278:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "feaf968c",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "514:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 172,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "530:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 174,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "530:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "545:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "564:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "583:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 180,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "583:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "513:93:1"
									},
									"scope": 184,
									"src": "449:158:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 294,
							"src": "61:549:1"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"id": 185,
							"nodeType": "ImportDirective",
							"scope": 294,
							"sourceUnit": 139,
							"src": "612:68:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "FundMe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 188,
									"libraryName": {
										"contractScope": null,
										"id": 186,
										"name": "SafeMathChainlink",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 138,
										"src": "712:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathChainlink_$138",
											"typeString": "library SafeMathChainlink"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "706:36:1",
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3e47d6f3",
									"id": 192,
									"mutability": "mutable",
									"name": "addressToAmountFunded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 293,
									"src": "748:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 191,
										"keyType": {
											"id": 189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "756:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "748:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 190,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "843:326:1",
										"statements": [
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "minimumUSD",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 226,
														"src": "854:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "854:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_50000000000000000000_by_1",
														"typeString": "int_const 50000000000000000000"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3530",
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "875:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "880:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3138",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "886:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "880:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "875:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50000000000000000000_by_1",
														"typeString": "int_const 50000000000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "854:34:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 205,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "925:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "925:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 204,
																	"name": "getConversionRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "907:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "907:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 208,
																"name": "minimumUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "938:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "907:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f75206e65656420746f207370656e64206d6f72652065746821",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "949:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16c16808ce8bc02aa7295cad5d169bbb8cb0e4cad592c8212b56cbbd56bb6538",
																"typeString": "literal_string \"You need to spend more eth!\""
															},
															"value": "You need to spend more eth!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16c16808ce8bc02aa7295cad5d169bbb8cb0e4cad592c8212b56cbbd56bb6538",
																"typeString": "literal_string \"You need to spend more eth!\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "899:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "899:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "899:80:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 213,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "993:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "993:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "minimumUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1005:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "993:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 225,
												"nodeType": "IfStatement",
												"src": "990:159:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 217,
																"name": "addressToAmountFunded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1103:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 220,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 218,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1125:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1125:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "1103:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 221,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1140:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1140:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1103:46:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 224,
													"nodeType": "ExpressionStatement",
													"src": "1103:46:1"
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "b60d4288",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:0:1"
									},
									"scope": 293,
									"src": "813:356:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1225:156:1",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 242,
														"src": "1236:31:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 232,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 184,
															"src": "1236:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307836393441413137363933353732313544453446414330383162663166333039614443333235333036",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1292:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x694AA1769357215DE4FAC081bf1f309aDC325306"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 234,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1270:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$184_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1270:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1236:99:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 238,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1353:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "version",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 155,
														"src": "1353:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 241,
												"nodeType": "Return",
												"src": "1346:26:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0d8e6e2c",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1194:2:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "1217:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1216:9:1"
									},
									"scope": 293,
									"src": "1175:206:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "1437:388:1",
										"statements": [
											{
												"assignments": [
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 267,
														"src": "1450:31:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 248,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 184,
															"src": "1450:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307836393441413137363933353732313544453446414330383162663166333039614443333235333036",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1506:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x694AA1769357215DE4FAC081bf1f309aDC325306"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 250,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1484:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$184_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1484:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:99:1"
											},
											{
												"assignments": [
													null,
													255,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "answer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 267,
														"src": "1613:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 254,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "1613:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 259,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 256,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1744:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$184",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 183,
														"src": "1744:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1563:208:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 262,
																"name": "answer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "1797:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3130303030303030303030",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1805:11:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"value": "10000000000"
															},
															"src": "1797:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1789:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1789:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 266,
												"nodeType": "Return",
												"src": "1782:35:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "98d5fdca",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1406:2:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 268,
												"src": "1429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1428:9:1"
									},
									"scope": 293,
									"src": "1389:436:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1905:157:1",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "ethPrice",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 291,
														"src": "1916:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 277,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "1935:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1935:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1916:29:1"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "ethAmountInUsd",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 291,
														"src": "1956:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1956:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 282,
																	"name": "ethPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "1982:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "1992:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1982:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 285,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1981:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31303030303030303030303030303030303030",
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2003:19:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1000000000000000000"
													},
													"src": "1981:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1956:66:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 289,
													"name": "ethAmountInUsd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 281,
													"src": "2040:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 274,
												"id": 290,
												"nodeType": "Return",
												"src": "2033:21:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6e5b6b28",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConversionRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "ethAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "1860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1860:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1859:16:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "1897:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1896:9:1"
									},
									"scope": 293,
									"src": "1833:229:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 294,
							"src": "684:1406:1"
						}
					],
					"src": "34:2056:1"
				},
				"id": 1
			}
		}
	}
}